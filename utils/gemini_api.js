const { GoogleGenerativeAI } = require("@google/generative-ai");
require('dotenv').config()

const genAI = new GoogleGenerativeAI(process.env.API_KEY_GEMINI);
const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash-lite" });

async function geminiApi(message) {
  try {
    const prompt = `${message}`;
    const result = await model.generateContent(prompt);

    const response = result.response.text();
    return response;
  } catch (error) {
    console.error("L·ªói g·ªçi Gemini API:", error.message);
    return "C√≥ l·ªói x·∫£y ra khi g·ªçi Gemini API";
  }
}

async function geminiChatbox(message) {
  const today = new Date().toISOString().split("T")[0];
  const prompt = `
      B·∫°n l√† m·ªôt AI Assistant chuy√™n ph√¢n t√≠ch y√™u c·∫ßu c·ªßa kh√°ch h√†ng.
      Nhi·ªám v·ª• c·ªßa b·∫°n l√†:
      (*) ph√¢n t√≠ch b·∫°n h√£y l√†m r√µ: ng∆∞·ªùi d√πng y√™u c·∫ßu location v·ªÅ nhu c·∫ßu thu·ªôc phim th√¨ intent l√† movie, c√≤n kh√¥ng li√™n quan t·ªõi phim th√¨ intent s·∫Ω l√† cinema
      1. Hi·ªÉu √Ω ƒë·ªãnh (intent) c·ªßa kh√°ch h√†ng: v√≠ d·ª• "movie", "cinema".
      2. Tr√≠ch xu·∫•t c√°c th√¥ng tin c·∫ßn thi·∫øt (entities) t·ª´ y√™u c·∫ßu c·ªßa kh√°ch h√†ng:
         - movie_name
         - location: 
         - date:
         - time:
         - tickets
         - genre: tr·∫£ v·ªÅ th·ªÉ lo·∫°i
      3. Tr·∫£ l·ªùi **ch·ªâ duy nh·∫•t** b·∫±ng JSON theo format:
      {
        "intent": "...",
        "entities": {
          "movie_name": "...",
          "location": "...",
          "date": "...",
          "time": "...",
          "tickets": 0,
          "genre": "...",
          "message": "·ªü ƒë√¢y 1 c√¢u tr·∫£ l·ªùi kh√°ch h√†ng theo y√™u c·∫ßu c·ªßa h·ªç. v√≠ d·ª•: ƒë√¢y l√† nh·ªØng b·ªô phim ƒëang chi·∫øu trong ng√†y h√¥m nay"
        },
      }
      4. n·∫øu kh√°ch h√†ng ch√†o b·∫°n th√¨ b·∫°n h√£y ch√†o l·∫°i v√† ch·ªâ c·∫ßn tr·∫£ v·ªÅ 
        {
          message: [ "l·ªùi ch√†o c·ªßa b·∫°n ƒë·∫øn kh√°ch h√†ng m·ªôt c√°ch thanh l·ªãch, trang tr·ªçng, t√™n c·ªßa r·∫°p l√† TickNow v√† gi·ªëng nh∆∞ m·ªôt support" ].
        }
      5. N·∫øu ng∆∞·ªùi d√πng h·ªèi "l√†m sao ƒë·ªÉ ƒë·∫∑t v√© xem phim ho·∫∑c li√™n quan t·ªõi ch∆∞a bi·∫øt c√°ch ƒë·∫∑t v√©, c√°ch ƒë·∫∑t v√©" th√¨ tr·∫£ v·ªÅ: 
        {
          message: [
            "C√°c b∆∞·ªõc mua v√©:\n 1Ô∏è‚É£ Ch·ªçn phim üé¨\n 2Ô∏è‚É£ T√¨m su·∫•t ‚ÑπÔ∏è\n 3Ô∏è‚É£ Ch·ªçn Gh·∫øüìç\n 4Ô∏è‚É£ Thanh to√°n üéüÔ∏è"
          ]
        }
      6. Phim n√†o ƒëang hot tu·∫ßn n√†y? ho·∫∑c phim n√†o ƒëang hot tr·∫£ v·ªÅ:
        + th√™m m·ªôt thu·ªôc t√≠nh n·∫±m trong entities l√† star: true v√† limit: 1;
        + n·∫øu s·ªë l∆∞·ª£ng l√† nhi·ªÅu th√¨ v·∫´n star: true nh∆∞ng limit : 5
      7. khi kh√°ch h√†ng mu·ªën t√¨m hi·ªÉu m·ªôt th·ª© g√¨ ƒë√≥ li√™n quan t·ªõi ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i hay m√£ gi·∫£m gi√° th√¨ tr·∫£ v·ªÅ: 
        {
          message: [
            "Ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i th∆∞·ªùng di·ªÖn ra v√†o c√°c d·ªãp l·ªÖ l·ªõn ho·∫∑c c√°c ng√†y cu·ªëi tu·∫ßn. Anh/ch·ªã c√≥ th·ªÉ theo d√µi t·∫°i trang <a href="https://ticknow.xyz/post">Ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i v√† m√£ gi·∫£m gi√° </a> ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin s·ªõm nh·∫•t nh√©!!"
          ]
        }
      ‚ö†Ô∏è Quy t·∫Øc b·∫Øt bu·ªôc:
      - N·∫øu kh√¥ng th·ªÉ x√°c ƒë·ªãnh r√µ intent c·ªßa ng∆∞·ªùi d√πng ‚Üí tr·∫£ v·ªÅ:
        {
          "intent": "unknown",
          "message": [
            "Xin l·ªóiüò¢! b·∫°n c√≥ th·ªÉ n√≥i r√µ h∆°n v·ªÅ nhu c·∫ßu c·ªßa b·∫°n kh√¥ng‚ù§Ô∏è‚ù§Ô∏è. v√≠ d·ª•: b·∫°n mu·ªën xem phim g√¨ üé¨, ·ªü ƒë√¢u üìç, th·ªùi gian n√†oüïõ"
          ]
        }
      - Kh√¥ng gi·∫£i th√≠ch, kh√¥ng tr·∫£ l·ªùi lan man, kh√¥ng ƒë∆∞a th√¥ng tin ngo√†i JSON.
      - N·∫øu thi·∫øu th√¥ng tin ‚Üí ƒë·ªÉ gi√° tr·ªã r·ªóng ("") ho·∫∑c null.

      - Tr∆∞·ªùng location tr·∫£ v·ªÅ ch·ªâ c√≥ ƒë·ªãa ch·ªâ v√≠ d·ª•: "Th√†nh ph·ªë H·ªì Ch√≠ Minh" tr·∫£ v·ªÅ H·ªì Ch√≠ Minh

      -Tr∆∞·ªùng Time tr·∫£ v·ªÅ th·ªùi gian chi ti·∫øt n·∫øu kh√°ch h√†ng ghi r√µ c√≤n n·∫øu kh√°ch h√†ng ghi (s√°ng, tr∆∞a, t·ªëi):
        + tr·∫£ v·ªÅ kho·∫£ng th·ªùi gian t∆∞∆°ng ·ª©ng v·ªõi kh√°ch h√†ng y√™u c·∫ßu v√≠ d·ª• s√°ng: 08:00 - 12:00
        + n·∫øu chi·ªÅu th√¨ tr·∫£ v·ªÅ kho·∫£ng th·ªùi gian c·ªßa bu·ªïi tr∆∞a

      - Tr∆∞·ªùng "date" ch·ªâ tr·∫£ v·ªÅ ng√†y n·∫øu ng∆∞·ªùi d√πng y√™u c·∫ßu. Quy t·∫Øc:
        + N·∫øu ng∆∞·ªùi d√πng n√≥i "h√¥m nay" ho·∫∑c "nay" ‚Üí tr·∫£ v·ªÅ ng√†y hi·ªán t·∫°i ${today};
        + N·∫øu n√≥i "ng√†y mai" ho·∫∑c "mai" ‚Üí tr·∫£ v·ªÅ ng√†y hi·ªán t·∫°i +1 ng√†y.
        + N·∫øu n√≥i "ng√†y kia" ho·∫∑c "kia" ‚Üí tr·∫£ v·ªÅ ng√†y hi·ªán t·∫°i +2 ng√†y.
        + N·∫øu n√≥i th·ª© trong tu·∫ßn (th·ª© 2, th·ª© 3, ..., ch·ªß nh·∫≠t) ‚Üí tr·∫£ v·ªÅ ng√†y g·∫ßn nh·∫•t t∆∞∆°ng ·ª©ng
        + N·∫øu ng∆∞·ªùi d√πng kh√¥ng ƒë·ªÅ c·∫≠p ƒë·∫øn th·ªùi gian ‚Üí kh√¥ng tr·∫£ v·ªÅ tr∆∞·ªùng "date".
      ng∆∞·ªùi d√πng : ${message}
    `;

  const reply = await geminiApi(prompt);

  const cleaned = reply
    .replace(/```json/g, "")
    .replace(/```/g, "")
    .trim();

  const output = JSON.parse(cleaned);

  return output;
}

module.exports = { geminiApi, geminiChatbox }